{- TODO: This would be `./../Group/Type … (./../Category/Monoidal/Profunctor
         object morphism)`, but `Category` isn’t defined via `Monoid`, so we
		 prefer compatibility with that.
-}
let kArrow =
      ./../Function/Kind sha256:0b6372c593badac5fe880699fd1cf19dfba07c62fab935a8bad96915866f466e

let kProduct =
      ./../Tuple/Kind sha256:03e1c52890f0cda1a2181cd3eb045d5344fc7c907fcbf836736c0e3222c5ffd8

let vObject = Type

in    λ ( object
        : Kind
        )
    → λ ( v
        : ./../Category/Monoidal/Kind sha256:f05d8665b46c686b6b930ad18aad6e1daa8c7a9c104d7bbeec947389d4d83e48
          kArrow
          kProduct
          Type
          vObject
        )
    → λ ( cat
        : ./../Category/Kind sha256:41ea86fd34226d0dc3c87cc12f9ce042e3b54e7eb77b451cdbfb085ba3f66916
          kArrow
          kProduct
          vObject
          object
        )
    → let profunctor =
            kArrow (kProduct object object) vObject
      
      in    λ ( morphism
              : profunctor
              )
          →   { inverse :
                  ∀(a : { _1 : object, _2 : object }) → morphism a → morphism a
              }
            ⩓ ./../Category/Type sha256:b5245b1f92f65f1b72bbfac6c53ebc19dc3c778b775b19ea4ad73fa6d2569dcb
              object
              v
              cat
