let kCat = ./../Category/Cat/semigroupal

let vObject = Type

in    λ(object : Kind)
    → λ(cat : ./../Category/Monoidal/Kind kCat vObject object)
    → λ(m : object)
    → λ(field : ./Type object cat m)
    →   { additive =
            field.additive
        , multiplicative =
            ./../Group/Commutative/extractMonoid
            object
            cat
            m
            field.multiplicative
        }
      : ./../Ring/Type object cat m
