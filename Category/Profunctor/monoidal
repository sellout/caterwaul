let kArrow =
      ./../../Function/Kind sha256:0b6372c593badac5fe880699fd1cf19dfba07c62fab935a8bad96915866f466e

let kProduct =
      ./../../Tuple/Kind sha256:03e1c52890f0cda1a2181cd3eb045d5344fc7c907fcbf836736c0e3222c5ffd8

in    λ ( object
        : Kind
        )
    → let profunctor =
            kArrow (kProduct object object) Type
      
      in    λ ( morphism
              : profunctor
              )
          →   { arrow =
                    λ(p : { _1 : profunctor, _2 : profunctor })
                  → ∀(a : { _1 : object, _2 : object }) → p._1 a → p._2 a
              , op =
                    λ(p : { _1 : profunctor, _2 : profunctor })
                  → λ(a : { _1 : object, _2 : object })
                  →   ∀(r : Type)
                    → (   ∀(z : object)
                        → p._1 { _1 = z, _2 = a._2 }
                        → p._2 { _1 = a._1, _2 = z }
                        → r
                      )
                    → r
              , identity =
                  morphism
              }
            : ./../Monoidal/Kind sha256:c90d64b23bd9269a630ed0e3c5202fef1969034543a57c20db10215d7092fe22
              kArrow
              kProduct
              profunctor
