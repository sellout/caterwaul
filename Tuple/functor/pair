let cat = ./../../Category/Cat/semigroupal

let vObject = Type

let v =
      ./../../Category/Monoidal/Cartesian/extractMonoidal
      cat
      Type
      vObject
      ./../../Category/Set/monoidal/cartesian

let Set = ./../../Category/Set/monoidal/cartesian

let base =
      ./../../Category/Monoidal/Cartesian/extractCategory cat vObject Type Set

in    { map =
            λ(a : { _1 : Type, _2 : Type })
          → λ(b : { _1 : Type, _2 : Type })
          → λ(f : { _1 : a._1 → b._1, _2 : a._2 → b._2 })
          → λ(t : Set.product a)
          → { _1 = f._1 t._1, _2 = f._2 t._2 }
      }
    : ./../../Functor/Pair/Type vObject Type v base Set.product
