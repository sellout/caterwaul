let kCat = ./../Cat/semigroupal

let vObject = Type

in    λ(object : Kind)
    → λ(v : ./../Monoidal/Kind kCat Type vObject)
    → λ(cat : ./Kind kCat vObject object)
    → λ(rig : ./Type object v cat)
    →   rig.additive
      : ./../Monoidal/Type object v (./extractAdditive kCat vObject object cat)
