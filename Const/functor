let cat =
      ./../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let vObject = Type

let v =
      ./../Category/Monoidal/Cartesian/extractMonoidal sha256:25afdf2818357f9c4b9dac6652b82e730472c389a634f8417a6014d39c7cddc0
      cat
      Type
      vObject
      ./../Category/Set/monoidal/cartesian sha256:48e8bea552638624a62335eab92acd1e0a04c28e8a0d8fe1c8974565065a9576

in    λ ( cObject
        : Kind
        )
    → λ ( c
        : ./../Category/Kind sha256:c73426d12cddcdfc44b6e687fc897f7ef91fcda0c4da116a91acdca4d15c68a2
          cat
          vObject
          cObject
        )
    → λ ( cCategory
        : ./../Category/Type sha256:5792bd3a482ad0d318aecda464bd952a6561dc1119bdc1f5db574cfc3b66e095
          cObject
          v
          c
        )
    → λ(dObject : Kind)
    → λ ( d
        : ./../Category/Kind sha256:c73426d12cddcdfc44b6e687fc897f7ef91fcda0c4da116a91acdca4d15c68a2
          cat
          vObject
          dObject
        )
    →   { map =
              λ(a : { _1 : cObject, _2 : dObject })
            → λ(b : { _1 : cObject, _2 : dObject })
            → λ ( f
                : { _1 :
                      c.arrow { _1 = a._1, _2 = b._1 }
                  , _2 :
                      d.arrow { _1 = a._2, _2 = b._2 }
                  }
                )
            → f._1
        }
      : ./../Functor/Bifunctor/Type sha256:d8949693dfb049e8d09615a9e1e7037418bc3e654d2eeecfc61e41a99e7daf41
        vObject
        cObject
        dObject
        cObject
        v
        c
        d
        c
        ( ./Type sha256:d0d255964e7701c8f9aa67f01b9f97dac9fbbda16e9c326faa48cddc1cf63740
          cObject
          dObject
        )
