let kCat = ./../../Category/Cat/semigroupal

let vObject = Type

let object = Type

let cat =
      ./../../Category/Monoidal/Cartesian/extractCategory
      kCat
      vObject
      object
      ./../../Category/Set/monoidal/cartesian

let category = ./../../Category/Set/category

let semigroupoid = ./../../Category/Set/semigroupoid

in    λ(m : kCat.arrow object object)
    → ./../../Monad/impliedMonoidalFunctor
      (./../Type object cat m)
      (./../../Ran/functor object object cat semigroupoid m m)
      (./../monad category m)
