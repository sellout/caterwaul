let kArrow = ./../Function/Kind

let kProduct = ./../Tuple/Kind

let vObject = Type

in    λ(object : Kind)
    → λ(v : ./../Category/Kind kArrow kProduct Type vObject)
    → λ(cat : ./../Category/Kind kArrow kProduct vObject object)
    → ./../Bimonoid/Type
      (kArrow object object)
      (./../Category/Endofunctor/monoidal/monadic object v cat)
