{- This is the weakest form of order provided. There is no standalone preorder,
   partial order, or anything, because there are too many possible
   instances. For the general case, just define regular functions. A
   `Group/PartiallyOrdered` constrains the instances enough for a generic “less
   than” to be meaningful.
-}
let cat =
      ./../../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let vObject = Type

let Set =
      ./../../Category/Monoidal/Cartesian/extractMonoidal sha256:0fcc63fc837459ca2866d31c5b11400b56fcb8f7d1846b774e98b47995c1879a
      cat
      Type
      vObject
      ./../../Category/Set/monoidal/cartesian sha256:b6efbdc0effbca1bc7427c980f2579012808494a8195fdf9fb52aea37ae91116

in    λ ( m
        : Type
        )
    →   { partialLE :
            m → m → Optional Bool
        }
      ⩓ ./../../Eq/Type sha256:16ec0250d1cd6f2d48bb5fe37d46d1db9ef640657c7b247b8d5be1aca30259b1
        m
      ⩓ ./../Type sha256:cac478dd8354b05c1af60acb85d82d4898c35cda2ea44ccf0b7cd61938c80c14
        Type
        Set
        m
