let kArrow =
      ./../../../Function/Kind sha256:0b6372c593badac5fe880699fd1cf19dfba07c62fab935a8bad96915866f466e

let kProduct =
      ./../../../Tuple/Kind sha256:03e1c52890f0cda1a2181cd3eb045d5344fc7c907fcbf836736c0e3222c5ffd8

let base =
      ./../../../Category/Monoidal/extractCategory sha256:f8fd8dd2ec93dac14e091587db11696f084c1d8eb9de88b71b625151904db9ff
      kArrow
      kProduct

let vObject = Type

let v =
      base
      Type
      vObject
      ./../../../Category/Set/monoidal/cartesian sha256:b017581ee66eec1995d52c80d527598dd5614254bf7217768c035c3a5e2103bd

let setObject = Type

let Set =
      ./../../../Category/Set/monoidal/cartesian sha256:b017581ee66eec1995d52c80d527598dd5614254bf7217768c035c3a5e2103bd

let cat = base vObject setObject Set

in    λ ( m
        : kArrow setObject setObject
        )
    → λ ( functor
        : ./../../../Functor/Endo/Type sha256:f7141343200ccaa9a1f80d06732e331624a3edd9e92b9ec3153db87c468fafe3
          vObject
          setObject
          v
          cat
          m
        )
    → λ(a : setObject)
    →   { map =
              λ(b : setObject)
            → λ(c : setObject)
            → λ(f : b → m c)
            → λ(t : Set.op { _1 = a, _2 = b })
            → functor.map
              c
              (Set.op { _1 = a, _2 = c })
              (λ(x : c) → t ⫽ { _2 = x })
              (f t._2)
        }
      : ./../../../Functor/Endo/Star/Type sha256:2362c697b588d4e2206bc6003d63b13abc31f8ecc25f6ccb72950d3611b6cb7f
        vObject
        setObject
        v
        cat
        m
        (λ(b : Type) → Set.op { _1 = a, _2 = b })
