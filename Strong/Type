let kArrow =
      ./../Function/Kind sha256:0b6372c593badac5fe880699fd1cf19dfba07c62fab935a8bad96915866f466e

let kProduct =
      ./../Tuple/Kind sha256:03e1c52890f0cda1a2181cd3eb045d5344fc7c907fcbf836736c0e3222c5ffd8

let vObject = Type

in    λ ( cObject
        : Kind
        )
    → λ(dObject : Kind)
    → λ ( v
        : ./../Category/Monoidal/Kind sha256:f05d8665b46c686b6b930ad18aad6e1daa8c7a9c104d7bbeec947389d4d83e48
          kArrow
          kProduct
          Type
          vObject
        )
    → λ ( c
        : ./../Category/Kind sha256:41ea86fd34226d0dc3c87cc12f9ce042e3b54e7eb77b451cdbfb085ba3f66916
          kArrow
          kProduct
          vObject
          cObject
        )
    → λ ( d
        : ./../Category/Kind sha256:41ea86fd34226d0dc3c87cc12f9ce042e3b54e7eb77b451cdbfb085ba3f66916
          kArrow
          kProduct
          vObject
          dObject
        )
    → λ(f : kArrow (kProduct dObject cObject) Type)
    →   { lmap :
            let op =
                  ./../Category/Op/Kind sha256:e9734284b447322a4da84aed6be9d3c9df5ed65f9428ad99e6b519ebe13a4c0a
                  vObject
                  dObject
                  d
            
            in    ∀(h : dObject)
                → ∀(i : dObject)
                → ∀(j : cObject)
                → op.arrow { _1 = h, _2 = i }
                → f { _1 = h, _2 = j }
                → f { _1 = i, _2 = j }
        , rmap :
              ∀(h : dObject)
            → ∀(i : cObject)
            → ∀(j : cObject)
            → c.arrow { _1 = i, _2 = j }
            → f { _1 = h, _2 = i }
            → f { _1 = h, _2 = j }
        }
      ⩓ ./../Functor/Profunctor/Type sha256:b49ae06477f88b9ef50357cd60262da0bbe266d8af1cbe3c5a6b8d6cee32df44
        cObject
        dObject
        v
        c
        d
        f
