let kCat =
      ./../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let base =
      ./../Category/Monoidal/extractCategory sha256:c9807a603a6bd9f0ef13debb0f11e63d6f7133870fef175f27d08dd81c2ff695
      kCat

let vObject = Type

let v =
      ./../Category/Monoidal/Cartesian/extractCategory sha256:5d481c2c40201add9d14edc5a5ff6471a11fa9c58fea348279927339cfd60456
      kCat
      Type
      vObject
      ./../Category/Set/monoidal/cartesian sha256:3a79a17d1c39a3df58efcc62fd96a2da0147bb29b524f57aa7c35942f653f164

let object = Type

let cat =
      ./../Category/Monoidal/Cartesian/extractMonoidal sha256:8112e73d82fd63e4e8bb5628a8cea43f92518a02e56ad351c7f9558546e7f81a
      kCat
      vObject
      object
      ./../Category/Set/monoidal/cartesian sha256:3a79a17d1c39a3df58efcc62fd96a2da0147bb29b524f57aa7c35942f653f164

in    λ ( f
        : kCat.arrow object object
        )
    → λ ( functor
        : ./../Functor/Endo/Type sha256:158c6ae27571d27adefd3b94b6b9ce3ed48e1130d406ec72c62ccadcf931dcd0
          vObject
          object
          v
          (base vObject object cat)
          f
        )
    → λ ( monad
        : ./Type sha256:f29e46a0fad45deefe74dbaf6daf7ff1abaaf7b02d672dfc254245ebc0cd651a
          object
          (base vObject object cat)
          f
        )
    →   { map =
            functor.map
        , unit =
              λ(a : object)
            → λ(fn : cat.arrow { _1 = cat.unit, _2 = a })
            → monad.unit a (fn {=})
        , product =
              λ ( i
                : object
                )
            → λ ( day
                :   ∀ ( r
                      : Type
                      )
                  → ./../Day/convolution sha256:ed0886d09259f7be70d35f7735d511b586438cc026f26fcf254b617f9a59610f
                    object
                    cat
                    cat
                    f
                    f
                    i
                    r
                  → r
                )
            → day
              (f i)
              (   λ(b : { _1 : object, _2 : object })
                → λ(fn : cat.arrow { _1 = cat.product b, _2 = i })
                → λ(d : { _1 : f b._1, _2 : f b._2 })
                → monad.product
                  i
                  ( functor.map
                    (cat.arrow { _1 = b._2, _2 = i })
                    (f i)
                    (   λ(fn : cat.arrow { _1 = b._2, _2 = i })
                      → functor.map b._2 i fn d._2
                    )
                    ( functor.map
                      b._1
                      (cat.arrow { _1 = b._2, _2 = i })
                      (λ(x : b._1) → λ(y : b._2) → fn { _1 = x, _2 = y })
                      d._1
                    )
                  )
              )
        }
      : ./../Functor/Monoidal/Type sha256:bf8111231d2f34c80be8863044f587a617c364172c46684ce6480c5c96764e74
        object
        v
        cat
        cat
        f
