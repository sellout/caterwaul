let kCat = ./../Cat/semigroupal

let vObject = Type

in    λ(object : Kind)
    → λ(v : ./../Monoidal/Kind kCat Type vObject)
    → λ(cat : ./Kind kCat vObject object)
    → λ(category : ./Type object v cat)
    → let base = ./extractCategory kCat vObject object cat
      
      in    category.{ map }
          : ./../../Functor/Pair/Type vObject object v base cat.product
