let kArrow =
      ./../../Function/Kind sha256:0b6372c593badac5fe880699fd1cf19dfba07c62fab935a8bad96915866f466e

let kProduct =
      ./../../Tuple/Kind sha256:03e1c52890f0cda1a2181cd3eb045d5344fc7c907fcbf836736c0e3222c5ffd8

let base =
      ./../../Category/Monoidal/extractCategory sha256:f8fd8dd2ec93dac14e091587db11696f084c1d8eb9de88b71b625151904db9ff
      kArrow
      kProduct

let vObject = Type

let v =
      ./../../Category/Set/monoidal/cartesian sha256:b017581ee66eec1995d52c80d527598dd5614254bf7217768c035c3a5e2103bd

let vBase = base Type vObject v

in    λ ( cObject
        : Kind
        )
    → λ ( c
        : ./../../Category/Kind sha256:41ea86fd34226d0dc3c87cc12f9ce042e3b54e7eb77b451cdbfb085ba3f66916
          kArrow
          kProduct
          vObject
          cObject
        )
    → λ ( cSemigroupoid
        : ./../../Semigroupoid/Type sha256:8cb9ba1a061053c5b685c45eefe13ace83aff91ddb0d381f204af51240ff4606
          cObject
          v
          c
          c.arrow
        )
    → let dObject =
            Type
      
      let d =
            base
            vObject
            dObject
            ./../../Category/Set/monoidal/cartesian sha256:b017581ee66eec1995d52c80d527598dd5614254bf7217768c035c3a5e2103bd
      
      in    λ ( f
              : kArrow cObject dObject
              )
          →   ./../../Ran/functor sha256:1d1193acbe81ab561eff0e704cdbe5add177f3689ca71fa444366ba1dd4df907
              cObject
              cObject
              c
              cSemigroupoid
              ( ./../../Identity/Type sha256:0f2ca3c3cd4682978197536d6365c4002a9b95ebbe882e8562879ee16736c3ae
                cObject
              )
              f
            : ./../../Functor/Type sha256:9222d1a669a235e545d7d24bc2845509339fb9f17711afef958df74457784d4d
              vObject
              cObject
              dObject
              vBase
              c
              d
              ( ./../Type sha256:851fb05baca35e5208b96212af4362baf4bed66ff336a90936ff7e46003c47ca
                cObject
                c
                f
              )
