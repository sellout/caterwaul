let Foldable = ./../Foldable/Type

let Compose = ./Type Type Type Type

in    λ(f : Type → Type)
    → λ(fFoldable : Foldable f)
    → λ(g : Type → Type)
    → λ(gFoldable : Foldable g)
    →   { fold =
              λ(a : Type)
            → λ(b : Type)
            → λ(k : b → a → b)
            → λ(z : b)
            → fFoldable.fold (g a) b (gFoldable.fold a b k) z
        }
      : Foldable (Compose { _1 = f, _2 = g })
