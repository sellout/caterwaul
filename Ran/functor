let cat =
      ./../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let monoidalBase =
      ./../Category/Monoidal/Cartesian/extractMonoidal sha256:25afdf2818357f9c4b9dac6652b82e730472c389a634f8417a6014d39c7cddc0
      cat

let base =
      ./../Category/Monoidal/extractCategory sha256:936b393338b8dcf60af6c25ecea2b0b02d83e18acfed60ff736754fe0c1d7b3d
      cat

let vObject = Type

let v =
      monoidalBase
      Type
      vObject
      ./../Category/Set/monoidal/cartesian sha256:48e8bea552638624a62335eab92acd1e0a04c28e8a0d8fe1c8974565065a9576

in    λ ( cObject
        : Kind
        )
    → λ(cpObject : Kind)
    → λ ( cp
        : ./../Category/Kind sha256:c73426d12cddcdfc44b6e687fc897f7ef91fcda0c4da116a91acdca4d15c68a2
          cat
          vObject
          cpObject
        )
    → λ ( cpSemigroupoid
        : ./../Semigroupoid/Type sha256:c43adcdb5e9cb39774277d7dcbeb77a8c85a6d64458b129d1a92bac3711f132d
          cpObject
          v
          cp
          cp.arrow
        )
    → let dObject =
            Type
      
      let d =
            base
            vObject
            dObject
            ( monoidalBase
              vObject
              dObject
              ./../Category/Set/monoidal/cartesian sha256:48e8bea552638624a62335eab92acd1e0a04c28e8a0d8fe1c8974565065a9576
            )
      
      let Ran =
            ./Type sha256:5047b1521693599d043a9c04270b2d4649481321743beae0ea4179975068d804
            cObject
            cpObject
            cp
      
      in    λ ( p
              : cat.arrow cObject cpObject
              )
          → λ(f : cat.arrow cObject dObject)
          →   { map =
                    λ(a : cpObject)
                  → λ(b : cpObject)
                  → λ(fn : cp.arrow { _1 = a, _2 = b })
                  → λ(ran : Ran p f a)
                  → λ(c : cObject)
                  → λ(k : cp.arrow { _1 = b, _2 = p c })
                  → ran
                    c
                    ( cpSemigroupoid.op
                      { _1 = a, _2 = p c }
                      (   λ(r : Type)
                        → λ ( arrowsOut
                            :   ∀(z : cpObject)
                              → cp.arrow { _1 = z, _2 = p c }
                              → cp.arrow { _1 = a, _2 = z }
                              → r
                            )
                        → arrowsOut b k fn
                      )
                    )
              }
            : ./../Functor/Type sha256:bebd999f32d6a3fd9bd7151ca5f0942ed6aeded30809c4a7e6c91382bed2dbcb
              vObject
              cpObject
              dObject
              (base Type vObject v)
              cp
              d
              (Ran p f)
