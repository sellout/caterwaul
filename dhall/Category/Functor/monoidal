{-|
This cheats a bit on the unit, since `dObject` is Type, we don‚Äôt need a functor
**Set** ‚Üí ùíü.
-}
let cat = ../../Category/Cat/semigroupal

let vObject = Type

let MonoidalCategory = ../Monoidal/Kind cat vObject

in  Œª(cObject : Kind) ‚Üí
      let dObject = Type

      in  Œª(v : ../Kind cat Type vObject) ‚Üí
          Œª(c : MonoidalCategory cObject) ‚Üí
          Œª(d : MonoidalCategory dObject) ‚Üí
            let base = ../Monoidal/extractCategory cat vObject

            in      { unit = Œª(x : cObject) ‚Üí c.arrow { _1 = c.unit, _2 = x }
                    , product = ../../Day/Type cObject d c
                    }
                  ‚àß ./category
                      cObject
                      dObject
                      v
                      (base cObject c)
                      (base dObject d)
                : MonoidalCategory (cat.arrow cObject dObject)
