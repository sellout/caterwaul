let cat =
      ./../../../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let vObject = Type

let v =
      ./../../../Category/Monoidal/Cartesian/extractCategory sha256:fe359f472fbc38300f29f9f50522e2e23d0bb16034bc98c93265a1f5aeb01349
      cat
      Type
      vObject
      ./../../../Category/Set/monoidal/cartesian sha256:48e8bea552638624a62335eab92acd1e0a04c28e8a0d8fe1c8974565065a9576

let Set =
      ./../../../Category/Monoidal/Cartesian/extractMonoidal sha256:25afdf2818357f9c4b9dac6652b82e730472c389a634f8417a6014d39c7cddc0
      cat
      vObject
      Type
      ./../../../Category/Set/monoidal/cartesian sha256:48e8bea552638624a62335eab92acd1e0a04c28e8a0d8fe1c8974565065a9576

in    λ ( m
        : cat.arrow Type Type
        )
    → λ ( monoidal
        : ./../../../Functor/Monoidal/Type sha256:7d4a68165b33b76bf9e8d8ab6fc8739699a1260549ebee624e57d8cab06f97c0
          Type
          v
          Set
          Set
          m
        )
    →   { map =
              λ ( a
                : Type
                )
            → λ(b : Type)
            → λ(f : Set.arrow { _1 = a, _2 = m b })
            → λ(fa : List a)
            → let liftCons =
                      λ ( mb
                        : m b
                        )
                    → λ(mlb : m (List b))
                    → monoidal.op
                      (List b)
                      (   λ ( r
                            : Type
                            )
                        → λ ( day
                            : ./../../../Day/convolution sha256:ca965ddd64a13ff9661a3e175fa344344e188283b59f6620afb6ffb36fe95ba5
                              Type
                              Set
                              Set
                              m
                              m
                              (List b)
                              r
                            )
                        → day
                          { _1 = b, _2 = List b }
                          (λ(p : { _1 : b, _2 : List b }) → [ p._1 ] # p._2)
                          { _1 = mb, _2 = mlb }
                      )
              
              in  List/fold
                  a
                  fa
                  (m (List b))
                  (λ(x : a) → liftCons (f x))
                  ( monoidal.identity
                    (List b)
                    (λ(_ : Set.identity) → [] : List b)
                  )
        }
      : ./../../../Functor/Endo/Star/Type sha256:fc8ac120351147c630fb970d16a63ab71aaf0db1cef9764f6988f65b318c199a
        vObject
        Type
        v
        ( ./../../../Category/Monoidal/extractCategory sha256:936b393338b8dcf60af6c25ecea2b0b02d83e18acfed60ff736754fe0c1d7b3d
          cat
          vObject
          Type
          Set
        )
        m
        List
