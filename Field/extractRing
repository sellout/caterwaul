let kArrow = ./../Function/Kind

let kProduct = ./../Tuple/Kind

in    λ(object : Kind)
    → λ(cat : ./../Category/Monoidal/Kind kArrow kProduct object)
    → λ(m : object)
    → λ(field : ./Type object cat m)
    →   { additive =
            field.additive
        , multiplicative =
            ./../Group/Commutative/extractMonoid
            object
            cat
            m
            field.multiplicative
        }
      : ./../Ring/Type object cat m
