let cat =
      ./../../../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let vObject = Type

let v =
      ./../../../Category/Monoidal/Cartesian/extractCategory sha256:fef093587bdc97a914e4e30469579c22f8fb63653ea5f511606e0e8109662a4b
      cat
      Type
      vObject
      ./../../../Category/Set/monoidal/cartesian sha256:b6efbdc0effbca1bc7427c980f2579012808494a8195fdf9fb52aea37ae91116

let Set =
      ./../../../Category/Monoidal/Cartesian/extractMonoidal sha256:0fcc63fc837459ca2866d31c5b11400b56fcb8f7d1846b774e98b47995c1879a
      cat
      vObject
      Type
      ./../../../Category/Set/monoidal/cartesian sha256:b6efbdc0effbca1bc7427c980f2579012808494a8195fdf9fb52aea37ae91116

in    λ ( m
        : cat.arrow Type Type
        )
    → λ ( monoidal
        : ./../../../Functor/Monoidal/Type sha256:73d6a61a626107cf8fc9ee73e02b3116a2540bae6fa38881165eab9d8c0f8913
          Type
          v
          Set
          Set
          m
        )
    →   { map =
              λ ( a
                : Type
                )
            → λ(b : Type)
            → λ(f : Set.arrow { _1 = a, _2 = m b })
            → λ(fa : List a)
            → let liftCons =
                      λ ( mb
                        : m b
                        )
                    → λ(mlb : m (List b))
                    → monoidal.product
                      (List b)
                      (   λ ( r
                            : Type
                            )
                        → λ ( day
                            : ./../../../Day/convolution sha256:9c319003951ddc83300318bd31dee48bc16d2f48890593ed4363470ab6763426
                              Type
                              Set
                              Set
                              m
                              m
                              (List b)
                              r
                            )
                        → day
                          { _1 = b, _2 = List b }
                          (λ(p : { _1 : b, _2 : List b }) → [ p._1 ] # p._2)
                          { _1 = mb, _2 = mlb }
                      )
              
              in  List/fold
                  a
                  fa
                  (m (List b))
                  (λ(x : a) → liftCons (f x))
                  ( monoidal.identity
                    (List b)
                    (λ(_ : Set.identity) → [] : List b)
                  )
        }
      : ./../../../Functor/Endo/Star/Type sha256:fc8ac120351147c630fb970d16a63ab71aaf0db1cef9764f6988f65b318c199a
        vObject
        Type
        v
        ( ./../../../Category/Monoidal/extractCategory sha256:be63455106b8fe90ee7366a02f05b29c1aa42e63243bb9994d55011052eab6ec
          cat
          vObject
          Type
          Set
        )
        m
        List
