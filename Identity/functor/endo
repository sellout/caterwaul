let kCat = ./../../Category/Cat/semigroupal

in    λ(vObject : Kind)
    → λ(object : Kind)
    → λ(v : ./../../Category/Kind kCat Type vObject)
    → λ ( vCategory
        : ./../../Category/Type
          vObject
          ( ./../../Category/Monoidal/Cartesian/extractMonoidal
            kCat
            Type
            Type
            ./../../Category/Set/monoidal/cartesian
          )
          v
        )
    → λ(cat : ./../../Category/Kind kCat vObject object)
    →   { map =
              λ(a : object)
            → λ(b : object)
            → vCategory.unit (cat.arrow { _1 = a, _2 = b })
        }
      : ./../../Functor/Endo/Type vObject object v cat (./../Type object)
