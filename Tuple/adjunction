let kArrow =
      ./../Function/Kind sha256:0b6372c593badac5fe880699fd1cf19dfba07c62fab935a8bad96915866f466e

let kProduct =
      ./../Tuple/Kind sha256:03e1c52890f0cda1a2181cd3eb045d5344fc7c907fcbf836736c0e3222c5ffd8

let vObject = Type

let object = Type

let Set =
      ./../Category/Set/monoidal/cartesian sha256:b017581ee66eec1995d52c80d527598dd5614254bf7217768c035c3a5e2103bd

let base =
      ./../Category/Monoidal/extractCategory sha256:f8fd8dd2ec93dac14e091587db11696f084c1d8eb9de88b71b625151904db9ff
      kArrow
      kProduct
      vObject

in    λ ( s
        : object
        )
    →   { unit =
            λ(a : object) → λ(x : a) → λ(y : s) → { _1 = y, _2 = x }
        , counit =
            λ(a : object) → λ(x : { _1 : s, _2 : s → a }) → x._2 x._1
        , leftAdjunct =
              λ(a : object)
            → λ(b : object)
            → λ(f : { _1 : s, _2 : a } → b)
            → λ(x : a)
            → λ(y : s)
            → f { _1 = y, _2 = x }
        , rightAdjunct =
              λ(a : object)
            → λ(b : object)
            → λ(f : a → s → b)
            → λ(t : { _1 : s, _2 : a })
            → f t._2 t._1
        }
      : ./../Adjunction/Type sha256:51ae2b2aced57c2ce57608835fd4331ac08731d0186f42dcf4149fac498b6862
        object
        object
        (base object Set)
        (base object Set)
        (λ(a : object) → Set.op { _1 = s, _2 = a })
        (λ(a : object) → Set.arrow { _1 = s, _2 = a })
