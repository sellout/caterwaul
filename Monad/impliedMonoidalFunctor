let kCat =
      ./../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let base =
      ./../Category/Monoidal/extractCategory sha256:936b393338b8dcf60af6c25ecea2b0b02d83e18acfed60ff736754fe0c1d7b3d
      kCat

let vObject = Type

let v =
      ./../Category/Monoidal/Cartesian/extractCategory sha256:fe359f472fbc38300f29f9f50522e2e23d0bb16034bc98c93265a1f5aeb01349
      kCat
      Type
      vObject
      ./../Category/Set/monoidal/cartesian sha256:48e8bea552638624a62335eab92acd1e0a04c28e8a0d8fe1c8974565065a9576

let object = Type

let cat =
      ./../Category/Monoidal/Cartesian/extractMonoidal sha256:25afdf2818357f9c4b9dac6652b82e730472c389a634f8417a6014d39c7cddc0
      kCat
      vObject
      object
      ./../Category/Set/monoidal/cartesian sha256:48e8bea552638624a62335eab92acd1e0a04c28e8a0d8fe1c8974565065a9576

in    λ ( f
        : kCat.arrow object object
        )
    → λ ( functor
        : ./../Functor/Endo/Type sha256:158c6ae27571d27adefd3b94b6b9ce3ed48e1130d406ec72c62ccadcf931dcd0
          vObject
          object
          v
          (base vObject object cat)
          f
        )
    → λ ( monad
        : ./Type sha256:d47c5141940d87e0a1ed370c52c27ddb1be4330b8c6684c90247f1f72eb77876
          object
          (base vObject object cat)
          f
        )
    →   { map =
            functor.map
        , identity =
              λ(a : object)
            → λ(fn : cat.arrow { _1 = cat.identity, _2 = a })
            → monad.identity a (fn {=})
        , op =
              λ ( i
                : object
                )
            → λ ( day
                :   ∀ ( r
                      : Type
                      )
                  → ./../Day/convolution sha256:ca965ddd64a13ff9661a3e175fa344344e188283b59f6620afb6ffb36fe95ba5
                    object
                    cat
                    cat
                    f
                    f
                    i
                    r
                  → r
                )
            → day
              (f i)
              (   λ(b : { _1 : object, _2 : object })
                → λ(fn : cat.arrow { _1 = cat.op b, _2 = i })
                → λ(d : { _1 : f b._1, _2 : f b._2 })
                → monad.op
                  i
                  ( functor.map
                    (cat.arrow { _1 = b._2, _2 = i })
                    (f i)
                    (   λ(fn : cat.arrow { _1 = b._2, _2 = i })
                      → functor.map b._2 i fn d._2
                    )
                    ( functor.map
                      b._1
                      (cat.arrow { _1 = b._2, _2 = i })
                      (λ(x : b._1) → λ(y : b._2) → fn { _1 = x, _2 = y })
                      d._1
                    )
                  )
              )
        }
      : ./../Functor/Monoidal/Type sha256:7d4a68165b33b76bf9e8d8ab6fc8739699a1260549ebee624e57d8cab06f97c0
        object
        v
        cat
        cat
        f
