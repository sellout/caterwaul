let cat =
      ./../../../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let vObject = Type

let v =
      ./../../../Category/Monoidal/Cartesian/extractCategory sha256:5d481c2c40201add9d14edc5a5ff6471a11fa9c58fea348279927339cfd60456
      cat
      Type
      vObject
      ./../../../Category/Set/monoidal/cartesian sha256:3a79a17d1c39a3df58efcc62fd96a2da0147bb29b524f57aa7c35942f653f164

let Set =
      ./../../../Category/Monoidal/Cartesian/extractMonoidal sha256:8112e73d82fd63e4e8bb5628a8cea43f92518a02e56ad351c7f9558546e7f81a
      cat
      vObject
      Type
      ./../../../Category/Set/monoidal/cartesian sha256:3a79a17d1c39a3df58efcc62fd96a2da0147bb29b524f57aa7c35942f653f164

in    λ ( m
        : cat.arrow Type Type
        )
    → λ ( monoidal
        : ./../../../Functor/Monoidal/Type sha256:bf8111231d2f34c80be8863044f587a617c364172c46684ce6480c5c96764e74
          Type
          v
          Set
          Set
          m
        )
    →   { map =
              λ ( a
                : Type
                )
            → λ(b : Type)
            → λ(f : Set.arrow { _1 = a, _2 = m b })
            → λ(fa : List a)
            → let liftCons =
                      λ ( mb
                        : m b
                        )
                    → λ(mlb : m (List b))
                    → monoidal.product
                      (List b)
                      (   λ ( r
                            : Type
                            )
                        → λ ( day
                            : ./../../../Day/convolution sha256:ed0886d09259f7be70d35f7735d511b586438cc026f26fcf254b617f9a59610f
                              Type
                              Set
                              Set
                              m
                              m
                              (List b)
                              r
                            )
                        → day
                          { _1 = b, _2 = List b }
                          (λ(p : { _1 : b, _2 : List b }) → [ p._1 ] # p._2)
                          { _1 = mb, _2 = mlb }
                      )
              
              in  List/fold
                  a
                  fa
                  (m (List b))
                  (λ(x : a) → liftCons (f x))
                  (monoidal.unit (List b) (λ(_ : Set.unit) → [] : List b))
        }
      : ./../../../Functor/Endo/Star/Type sha256:fc8ac120351147c630fb970d16a63ab71aaf0db1cef9764f6988f65b318c199a
        vObject
        Type
        v
        ( ./../../../Category/Monoidal/extractCategory sha256:c9807a603a6bd9f0ef13debb0f11e63d6f7133870fef175f27d08dd81c2ff695
          cat
          vObject
          Type
          Set
        )
        m
        List
