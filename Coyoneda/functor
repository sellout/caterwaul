let kArrow = ./../Function/Kind

let kProduct = ./../Tuple/Kind

let vObject = Type

let v = ./../Category/Set/monoidal/cartesian

in    λ(object : Kind)
    → λ(cat : ./../Category/Kind kArrow kProduct vObject object)
    → λ(semigroupoid : ./../Semigroupoid/Type object v cat cat.arrow)
    → ./../Lan/functor
      object
      object
      cat
      semigroupoid
      (./../Identity/Type object)
