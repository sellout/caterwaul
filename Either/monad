let cat =
      ./../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let vObject = Type

let Set =
      ./../Category/Set/rig sha256:99e5c0b51dc280856faa2d331627ba6ace4b7d7b278ec47f8a5844beb1c08052

in    λ ( a
        : Type
        )
    →   { identity =
            λ(b : Type) → λ(x : b) → < Right = x | Left : a >
        , product =
              λ(b : Type)
            → λ ( fa
                : Set.additive.product
                  { _1 = a, _2 = Set.additive.product { _1 = a, _2 = b } }
                )
            → merge
              { Left =
                  λ(l : a) → < Left = l | Right : b >
              , Right =
                  λ(e : < Left : a | Right : b >) → e
              }
              ( merge
                { Left =
                      λ(x : a)
                    → < Left =
                          x
                      | Right :
                          Set.additive.product { _1 = a, _2 = b }
                      >
                , Right =
                      λ(x : Set.additive.product { _1 = a, _2 = b })
                    → < Right = x | Left : a >
                }
                fa
              )
        }
      : ./../Monad/Type sha256:0324dd40fc192581e566136f5cde4424ed653ecf7311b967b7d291d05484b78e
        Type
        ( ./../Category/Monoidal/Cartesian/extractCategory sha256:fef093587bdc97a914e4e30469579c22f8fb63653ea5f511606e0e8109662a4b
          cat
          vObject
          Type
          ./../Category/Set/monoidal/cartesian sha256:b6efbdc0effbca1bc7427c980f2579012808494a8195fdf9fb52aea37ae91116
        )
        (λ(b : Type) → Set.additive.product { _1 = a, _2 = b })
