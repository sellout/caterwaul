let kArrow =
      ./../Function/Kind sha256:0b6372c593badac5fe880699fd1cf19dfba07c62fab935a8bad96915866f466e

let kProduct =
      ./../Tuple/Kind sha256:03e1c52890f0cda1a2181cd3eb045d5344fc7c907fcbf836736c0e3222c5ffd8

let vObject = Type

in    λ ( cObject
        : Kind
        )
    → λ(dObject : Kind)
    → λ ( c
        : ./../Category/Kind sha256:41ea86fd34226d0dc3c87cc12f9ce042e3b54e7eb77b451cdbfb085ba3f66916
          kArrow
          kProduct
          vObject
          cObject
        )
    → λ ( d
        : ./../Category/Kind sha256:41ea86fd34226d0dc3c87cc12f9ce042e3b54e7eb77b451cdbfb085ba3f66916
          kArrow
          kProduct
          vObject
          dObject
        )
    → λ(f : kArrow dObject cObject)
    → λ(g : kArrow cObject dObject)
    → { unit :
          ∀(a : dObject) → d.arrow { _1 = a, _2 = g (f a) }
      , counit :
          ∀(a : cObject) → c.arrow { _1 = f (g a), _2 = a }
      , leftAdjunct :
            ∀(a : dObject)
          → ∀(b : cObject)
          → c.arrow { _1 = f a, _2 = b }
          → d.arrow { _1 = a, _2 = g b }
      , rightAdjunct :
            ∀(a : dObject)
          → ∀(b : cObject)
          → d.arrow { _1 = a, _2 = g b }
          → c.arrow { _1 = f a, _2 = b }
      }
