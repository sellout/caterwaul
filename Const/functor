let cat =
      ./../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let vObject = Type

let v =
      ./../Category/Monoidal/Cartesian/extractMonoidal sha256:8112e73d82fd63e4e8bb5628a8cea43f92518a02e56ad351c7f9558546e7f81a
      cat
      Type
      vObject
      ./../Category/Set/monoidal/cartesian sha256:3a79a17d1c39a3df58efcc62fd96a2da0147bb29b524f57aa7c35942f653f164

in    λ ( cObject
        : Kind
        )
    → λ ( c
        : ./../Category/Kind sha256:c73426d12cddcdfc44b6e687fc897f7ef91fcda0c4da116a91acdca4d15c68a2
          cat
          vObject
          cObject
        )
    → λ ( cCategory
        : ./../Category/Type sha256:3983e08568dd06043567236a0b0ceb489d34346ea7cc29bd9c4d98bd567e03b9
          cObject
          v
          c
        )
    → λ(dObject : Kind)
    → λ ( d
        : ./../Category/Kind sha256:c73426d12cddcdfc44b6e687fc897f7ef91fcda0c4da116a91acdca4d15c68a2
          cat
          vObject
          dObject
        )
    →   { map =
              λ(a : { _1 : cObject, _2 : dObject })
            → λ(b : { _1 : cObject, _2 : dObject })
            → λ ( f
                : { _1 :
                      c.arrow { _1 = a._1, _2 = b._1 }
                  , _2 :
                      d.arrow { _1 = a._2, _2 = b._2 }
                  }
                )
            → f._1
        }
      : ./../Functor/Bifunctor/Type sha256:5d415a75b8765b342fa599191990337e1a14767512f5714217a95b7adeac171c
        vObject
        cObject
        dObject
        cObject
        v
        c
        d
        c
        ( ./Type sha256:d0d255964e7701c8f9aa67f01b9f97dac9fbbda16e9c326faa48cddc1cf63740
          cObject
          dObject
        )
