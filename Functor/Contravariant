{- A contravariant functor `C → D` is equivalent to a covariant functor
  `C^op → D`.
-}
let kArrow =
      ./../Function/Kind sha256:0b6372c593badac5fe880699fd1cf19dfba07c62fab935a8bad96915866f466e

let kProduct =
      ./../Tuple/Kind sha256:03e1c52890f0cda1a2181cd3eb045d5344fc7c907fcbf836736c0e3222c5ffd8

in    λ ( vObject
        : Kind
        )
    → λ(cObject : Kind)
    → λ(dObject : Kind)
    → λ ( v
        : ./../Category/Kind sha256:41ea86fd34226d0dc3c87cc12f9ce042e3b54e7eb77b451cdbfb085ba3f66916
          kArrow
          kProduct
          Type
          vObject
        )
    → λ ( c
        : ./../Category/Kind sha256:41ea86fd34226d0dc3c87cc12f9ce042e3b54e7eb77b451cdbfb085ba3f66916
          kArrow
          kProduct
          vObject
          cObject
        )
    → ./Type sha256:9222d1a669a235e545d7d24bc2845509339fb9f17711afef958df74457784d4d
      vObject
      cObject
      dObject
      v
      ( ./../Category/Op/Kind sha256:e9734284b447322a4da84aed6be9d3c9df5ed65f9428ad99e6b519ebe13a4c0a
        vObject
        cObject
        c
      )
