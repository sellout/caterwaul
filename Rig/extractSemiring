let kArrow = ./../Function/Kind

let kProduct = ./../Tuple/Kind

in    λ(object : Kind)
    → λ(cat : ./../Category/Monoidal/Kind kArrow kProduct object)
    → λ(m : object)
    → λ(rig : ./Type object cat m)
    →   { additive =
            ./../Monoid/Commutative/extractSemigroup object cat m rig.additive
        , multiplicative =
            rig.multiplicative
        }
      : ./../Semiring/Type object cat m
