{- This, specialized to `Type ../Category/Set/type`, is equivalent to Haskell’s
  `Profunctor`. Not to be confused with Dhall’s `./Profunctor`, which is more
   general.
-}
let cat = ./../Category/Cat/semigroupal

let vObject = Type

in    λ(v : ./../Category/Monoidal/Kind cat Type vObject)
    → ./Hom
      vObject
      v
      (./../Category/Monoidal/extractCategory cat Type vObject v)
