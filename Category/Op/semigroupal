let kArrow = ./../../Function/Kind

let kProduct = ./../../Tuple/Kind

in    λ(vObject : Kind)
    → λ(object : Kind)
    → λ(cat : ./../Semigroupal/Kind kArrow kProduct vObject object)
    →     { op = cat.op }
        ∧ ./Kind
          vObject
          object
          ( ./../../Category/Semigroupal/extractCategory
            kArrow
            kProduct
            vObject
            object
            cat
          )
      : ./../Semigroupal/Kind kArrow kProduct vObject object
