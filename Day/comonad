let kArrow =
      ./../Function/Kind sha256:0b6372c593badac5fe880699fd1cf19dfba07c62fab935a8bad96915866f466e

let object = Type

let cat =
      ./../Category/Set/monoidal/cartesian sha256:b3c97e385d62b718ab11e540a98141cb81b89db0d7c1115ec11b330c596dcf01

in    λ ( semigroupoid
        : ./../Semigroupoid/Type sha256:7ea3ed050672efbe97058fdf8cee2c448261528fb9df88e77792684384125059
          object
          cat.arrow
        )
    → let Comonad =
            ./../Comonad/Type sha256:f4df0fb438550e7ab95bad1373735669107b4d3027365755ed77d8dd5aea40b9
            object
            cat.arrow
      
      let Day =
            ./Type sha256:681b4b22f4cd4484c75a93d75c4c4a58c7d7b146d8f9e1a52602b49a8fb51f87
            object
            cat
            cat
      
      let Day/convolution =
            ./../Day/convolution sha256:dffad22f69e29116debfd7702a83fae5a1278fa46a80668aa9730c28c1afdd02
            object
            cat
            cat
      
      in    λ(f : kArrow object object)
          → λ(fComonad : Comonad f)
          → λ(g : kArrow object object)
          → λ(gComonad : Comonad g)
          →   { identity =
                    λ(a : object)
                  → λ(day : Day { _1 = f, _2 = g } a)
                  → day
                    a
                    (   λ(b : { _1 : object, _2 : object })
                      → λ(fn : { _1 : b._1, _2 : b._2 } → a)
                      → λ(d : { _1 : f b._1, _2 : g b._2 })
                      → fn
                        { _1 =
                            fComonad.identity b._1 d._1
                        , _2 =
                            gComonad.identity b._2 d._2
                        }
                    )
              , op =
                    λ(a : object)
                  → λ(day : Day { _1 = f, _2 = g } a)
                  → day
                    (Day { _1 = f, _2 = g } (Day { _1 = f, _2 = g } a))
                    (   λ(b : { _1 : object, _2 : object })
                      → λ(fn : { _1 : b._1, _2 : b._2 } → a)
                      → λ(d : { _1 : f b._1, _2 : g b._2 })
                      → λ(r0 : object)
                      → λ ( day0
                          : Day/convolution f g (Day { _1 = f, _2 = g } a) r0
                          )
                      → day0
                        { _1 = f b._1, _2 = g b._2 }
                        (   λ(p : { _1 : f b._1, _2 : g b._2 })
                          → λ(r1 : object)
                          → λ(day1 : Day/convolution f g a r1)
                          → day1 b fn p
                        )
                        { _1 =
                            fComonad.op b._1 d._1
                        , _2 =
                            gComonad.op b._2 d._2
                        }
                    )
              }
            : Comonad (Day { _1 = f, _2 = g })
