let cat =
      ./../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let monoidalBase =
      ./../Category/Monoidal/Cartesian/extractMonoidal sha256:0fcc63fc837459ca2866d31c5b11400b56fcb8f7d1846b774e98b47995c1879a
      cat

let base =
      ./../Category/Monoidal/extractCategory sha256:be63455106b8fe90ee7366a02f05b29c1aa42e63243bb9994d55011052eab6ec
      cat

let vObject = Type

let v =
      monoidalBase
      Type
      vObject
      ./../Category/Set/monoidal/cartesian sha256:b6efbdc0effbca1bc7427c980f2579012808494a8195fdf9fb52aea37ae91116

in    λ ( cObject
        : Kind
        )
    → λ(cpObject : Kind)
    → λ ( cp
        : ./../Category/Kind sha256:c73426d12cddcdfc44b6e687fc897f7ef91fcda0c4da116a91acdca4d15c68a2
          cat
          vObject
          cpObject
        )
    → λ ( cpSemigroupoid
        : ./../Semigroupoid/Type sha256:b5492226c5be6bd719ab035c9286b707b273e6b191f3b8b572e51394688717c6
          cpObject
          v
          cp
          cp.arrow
        )
    → let dObject =
            Type
      
      let d =
            base
            vObject
            dObject
            ( monoidalBase
              vObject
              dObject
              ./../Category/Set/monoidal/cartesian sha256:b6efbdc0effbca1bc7427c980f2579012808494a8195fdf9fb52aea37ae91116
            )
      
      let Ran =
            ./Type sha256:5047b1521693599d043a9c04270b2d4649481321743beae0ea4179975068d804
            cObject
            cpObject
            cp
      
      in    λ ( p
              : cat.arrow cObject cpObject
              )
          → λ(f : cat.arrow cObject dObject)
          →   { map =
                    λ(a : cpObject)
                  → λ(b : cpObject)
                  → λ(fn : cp.arrow { _1 = a, _2 = b })
                  → λ(ran : Ran p f a)
                  → λ(c : cObject)
                  → λ(k : cp.arrow { _1 = b, _2 = p c })
                  → ran
                    c
                    ( cpSemigroupoid.product
                      { _1 = a, _2 = p c }
                      (   λ(r : Type)
                        → λ ( arrowsOut
                            :   ∀(z : cpObject)
                              → cp.arrow { _1 = z, _2 = p c }
                              → cp.arrow { _1 = a, _2 = z }
                              → r
                            )
                        → arrowsOut b k fn
                      )
                    )
              }
            : ./../Functor/Type sha256:bebd999f32d6a3fd9bd7151ca5f0942ed6aeded30809c4a7e6c91382bed2dbcb
              vObject
              cpObject
              dObject
              (base Type vObject v)
              cp
              d
              (Ran p f)
