let kArrow = ./../Function/Kind

let kProduct = ./../Tuple/Kind

let vObject = Type

in    λ(object : Kind)
    → λ(v : ./Monoidal/Kind kArrow kProduct Type vObject)
    → λ(cat : ./Kind kArrow kProduct vObject object)
    → λ(category : ./Type object v cat)
    → category.{ op } : ./../Semigroupoid/Type object v cat cat.arrow
