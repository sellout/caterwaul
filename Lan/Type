let kArrow = ./../Function/Kind

let kProduct = ./../Tuple/Kind

let vObject = Type

in    λ(cObject : Kind)
    → λ(cpObject : Kind)
    → λ(cp : ./../Category/Kind kArrow kProduct vObject cpObject)
    → let dObject = Type
      
      in    λ(p : kArrow cObject cpObject)
          → λ(f : kArrow cObject dObject)
          → λ(a : cpObject)
          →   ∀(r : Type)
            → (∀(b : cObject) → cp.arrow { _1 = p b, _2 = a } → f b → r)
            → r
