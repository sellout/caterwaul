{- A functor from a Kleisli category to the underlying non-Kleisli category.
-}
let kArrow = ./../../Function/Kind

let kProduct = ./../../Tuple/Kind

in    λ(object : Kind)
    → λ(arrow : kArrow (kProduct object object) Type)
    → λ(m : kArrow object object)
    → ./../Type object object (./../../Star/Type object arrow m) arrow
