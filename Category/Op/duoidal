let kArrow = ./../../Function/Kind

let kProduct = ./../../Tuple/Kind

in    λ(object : Kind)
    → λ(cat : ./../Duoidal/Kind kArrow kProduct object)
    →   { constraint =
            cat.constraint
        , arrow =
            ./Type object cat.arrow
        , additive =
            cat.additive
        , multiplicative =
            cat.multiplicative
        }
      : ./../Duoidal/Kind kArrow kProduct object
