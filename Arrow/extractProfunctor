let kCat = ./../Category/Cat/semigroupal

let vObject = Type

in    λ(object : Kind)
    → λ(v : ./../Category/Monoidal/Kind kCat Type vObject)
    → λ(cat : ./../Category/Semigroupal/Kind kCat vObject object)
    → let base =
            ./../Category/Semigroupal/extractCategory kCat vObject object cat
      
      in    λ(arrow : ./Type object v cat)
          →   arrow.{ map }
            : ./../Functor/Profunctor/Type object object v base base cat.arrow
