let kCat = ./../Cat/semigroupal

let vObject = Type

in    λ(object : Kind)
    → λ(v : ./../../Category/Monoidal/Kind kCat Type vObject)
    → λ(cat : ./../Kind kCat vObject object)
    → λ(category : ./../Type object v cat)
    → let op = ./../Op/Kind vObject object cat
      
      let opCategory = ./../Op/category object v cat category
      
      let Dagger = ./Kind object cat
      
      in    { unit =
                  λ(a : object)
                → { to = category.unit a, from = opCategory.unit a }
            , product =
                  λ(a : { _1 : object, _2 : object })
                → λ ( p
                    :   ∀(r : Type)
                      → (   ∀(z : object)
                          → Dagger.arrow { _1 = z, _2 = a._2 }
                          → Dagger.arrow { _1 = a._1, _2 = z }
                          → r
                        )
                      → r
                    )
                → { to =
                      category.product
                      a
                      (   λ(r : Type)
                        → λ ( arrowsOut
                            :   ∀(z : object)
                              → cat.arrow { _1 = z, _2 = a._2 }
                              → cat.arrow { _1 = a._1, _2 = z }
                              → r
                            )
                        → p
                          r
                          (   λ(z : object)
                            → λ(f : Dagger.arrow { _1 = z, _2 = a._2 })
                            → λ(g : Dagger.arrow { _1 = a._1, _2 = z })
                            → arrowsOut z f.to g.to
                          )
                      )
                  , from =
                      opCategory.product
                      a
                      (   λ(r : Type)
                        → λ ( arrowsOut
                            :   ∀(z : object)
                              → op.arrow { _1 = z, _2 = a._2 }
                              → op.arrow { _1 = a._1, _2 = z }
                              → r
                            )
                        → p
                          r
                          (   λ(z : object)
                            → λ(f : Dagger.arrow { _1 = z, _2 = a._2 })
                            → λ(g : Dagger.arrow { _1 = a._1, _2 = z })
                            → arrowsOut z f.from g.from
                          )
                      )
                  }
            }
          : ./../Type object v Dagger
