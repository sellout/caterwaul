let kArrow = ./../../Function/Kind

let kProduct = ./../../Tuple/Kind

in    λ(object : Kind)
    → let profunctor = kArrow (kProduct object object) Type
      
      in    λ(morphism : profunctor)
          →   ./semigroupal object morphism ∧ { identity = morphism }
            : ./../Monoidal/Kind kArrow kProduct profunctor
