let kCat =
      ./../../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let base =
      ./../../Category/Monoidal/extractCategory sha256:be63455106b8fe90ee7366a02f05b29c1aa42e63243bb9994d55011052eab6ec
      kCat

let vObject = Type

let v =
      ./../../Category/Monoidal/Cartesian/extractMonoidal sha256:0fcc63fc837459ca2866d31c5b11400b56fcb8f7d1846b774e98b47995c1879a
      kCat
      Type
      vObject
      ./../../Category/Set/monoidal/cartesian sha256:b6efbdc0effbca1bc7427c980f2579012808494a8195fdf9fb52aea37ae91116

let Set =
      ./../../Category/Rig/extractAdditive sha256:5e68260653c471df3977a657c811c8ca7f0317e379bcd90886917b0f2ec52f2b
      kCat
      vObject
      Type
      ./../../Category/Set/rig sha256:99e5c0b51dc280856faa2d331627ba6ace4b7d7b278ec47f8a5844beb1c08052

let cat = base vObject Type Set

in    λ ( m
        : Type → Type
        )
    → λ ( functor
        : ./../../Functor/Endo/Type sha256:158c6ae27571d27adefd3b94b6b9ce3ed48e1130d406ec72c62ccadcf931dcd0
          vObject
          Type
          (base Type vObject v)
          cat
          m
        )
    →   { map =
              λ(a : { _1 : Type, _2 : Type })
            → λ(b : { _1 : Type, _2 : Type })
            → λ(f : { _1 : a._1 → m b._1, _2 : a._2 → m b._2 })
            → λ(e : Set.product a)
            → let E = Set.product b
              
              in  merge
                  { Left =
                        λ(x : a._1)
                      → functor.map b._1 (Set.product b) E.Left (f._1 x)
                  , Right =
                        λ(x : a._2)
                      → functor.map b._2 (Set.product b) E.Right (f._2 x)
                  }
                  e
        }
      : ./../../Functor/Pair/Type sha256:51cd0825dd05a6c58e6afc0c4f95e00a5b8db9affd8b028137dac704e1f1457c
        vObject
        Type
        v
        ( ./../../Category/Kleisli/category sha256:305a4efbaafe53c64977af42c8d0be72f689442060a575282f9d31d19ad974ca
          vObject
          Type
          cat
          m
        )
        Set.product
