let cat =
      ./../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let vObject = Type

let v =
      ./../Category/Monoidal/Cartesian/extractMonoidal sha256:8112e73d82fd63e4e8bb5628a8cea43f92518a02e56ad351c7f9558546e7f81a
      cat
      Type
      vObject
      ./../Category/Set/monoidal/cartesian sha256:3a79a17d1c39a3df58efcc62fd96a2da0147bb29b524f57aa7c35942f653f164

let base =
      ./../Category/Monoidal/extractCategory sha256:c9807a603a6bd9f0ef13debb0f11e63d6f7133870fef175f27d08dd81c2ff695
      cat
      Type
      vObject
      v

in    λ ( semigroupoid
        : ./../Semigroupoid/Type sha256:40a8e489fddee04bb4fda6df908b24c2143a7f75b4c5e25eec9fd34e7947bbb8
          vObject
          v
          base
          v.arrow
        )
    → let Comonad =
            ./../Comonad/Type sha256:5ef8ab824c6bf670bbf787d84043177e063e0b3d4565907c2d70a54afd5cbd84
            vObject
            base
      
      let Day =
            ./Type sha256:f2b5b6fb9d2fead2e46f0fe8362e08133d5f552c932d9ca03126f256d24b8520
            vObject
            v
            v
      
      let Day/convolution =
            ./../Day/convolution sha256:ed0886d09259f7be70d35f7735d511b586438cc026f26fcf254b617f9a59610f
            vObject
            v
            v
      
      in    λ(f : cat.arrow vObject vObject)
          → λ(fComonad : Comonad f)
          → λ(g : cat.arrow vObject vObject)
          → λ(gComonad : Comonad g)
          →   { unit =
                    λ(a : vObject)
                  → λ(day : Day { _1 = f, _2 = g } a)
                  → day
                    a
                    (   λ(b : { _1 : vObject, _2 : vObject })
                      → λ(fn : { _1 : b._1, _2 : b._2 } → a)
                      → λ(d : { _1 : f b._1, _2 : g b._2 })
                      → fn
                        { _1 =
                            fComonad.unit b._1 d._1
                        , _2 =
                            gComonad.unit b._2 d._2
                        }
                    )
              , product =
                    λ(a : vObject)
                  → λ(day : Day { _1 = f, _2 = g } a)
                  → day
                    (Day { _1 = f, _2 = g } (Day { _1 = f, _2 = g } a))
                    (   λ(b : { _1 : vObject, _2 : vObject })
                      → λ(fn : { _1 : b._1, _2 : b._2 } → a)
                      → λ(d : { _1 : f b._1, _2 : g b._2 })
                      → λ(r0 : vObject)
                      → λ ( day0
                          : Day/convolution f g (Day { _1 = f, _2 = g } a) r0
                          )
                      → day0
                        { _1 = f b._1, _2 = g b._2 }
                        (   λ(p : { _1 : f b._1, _2 : g b._2 })
                          → λ(r1 : vObject)
                          → λ(day1 : Day/convolution f g a r1)
                          → day1 b fn p
                        )
                        { _1 =
                            fComonad.product b._1 d._1
                        , _2 =
                            gComonad.product b._2 d._2
                        }
                    )
              }
            : Comonad (Day { _1 = f, _2 = g })
