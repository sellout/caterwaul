{- TODO: Should be a Rig/Commutative -}
let cat =
      ./../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let vObject = Type

let Set =
      ./../Category/Monoidal/Cartesian/extractMonoidal sha256:0fcc63fc837459ca2866d31c5b11400b56fcb8f7d1846b774e98b47995c1879a
      cat
      vObject
      Type
      ./../Category/Set/monoidal/cartesian sha256:b6efbdc0effbca1bc7427c980f2579012808494a8195fdf9fb52aea37ae91116

in    { additive =
          { identity =
              λ(_ : {}) → 0
          , product =
              λ(t : { _1 : Natural, _2 : Natural }) → t._1 + t._2
          }
      , multiplicative =
          { identity =
              λ(_ : {}) → 1
          , product =
              λ(t : { _1 : Natural, _2 : Natural }) → t._1 * t._2
          }
      }
    : ./../Rig/Type sha256:db5179b63bfe4cfec2face20845757f747a1fbe98c7e8ccdaf86487cfeec17f4
      Type
      Set
      Natural
