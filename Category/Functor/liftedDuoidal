{- For any rig category ùíû, any ùíû-valued functor category is a rig category in
   the same way by ‚Äúlifting‚Äù the rig structure of ùíû.
-}
let kArrow =
      ./../../Function/Kind sha256:0b6372c593badac5fe880699fd1cf19dfba07c62fab935a8bad96915866f466e

let kProduct =
      ./../../Tuple/Kind sha256:03e1c52890f0cda1a2181cd3eb045d5344fc7c907fcbf836736c0e3222c5ffd8

let vObject = Type

let Category =
      ./../Kind sha256:41ea86fd34226d0dc3c87cc12f9ce042e3b54e7eb77b451cdbfb085ba3f66916
      kArrow
      kProduct

let DuoidalCategory = ./../Duoidal/Kind kArrow kProduct

in    Œª ( cObject
        : Kind
        )
    ‚Üí let dObject =
            Type
      
      in    Œª ( v
              : Category Type vObject
              )
          ‚Üí Œª(c : Category vObject cObject)
          ‚Üí Œª(d : DuoidalCategory vObject dObject)
          ‚Üí let base =
                  ./../Duoidal/extractCategory kArrow kProduct vObject
            
            let object = kArrow cObject dObject
            
            in      { additive =
                        { identity =
                              Œª(x : cObject)
                            ‚Üí ./../../Const/Type
                              dObject
                              cObject
                              { _1 = d.additive.identity, _2 = x }
                        , op =
                              Œª(f : { _1 : object, _2 : object })
                            ‚Üí Œª(x : cObject)
                            ‚Üí d.additive.op { _1 = f._1 x, _2 = f._2 x }
                        }
                    , multiplicative =
                        { identity =
                              Œª(x : cObject)
                            ‚Üí ./../../Const/Type
                              dObject
                              cObject
                              { _1 = d.multiplicative.identity, _2 = x }
                        , op =
                              Œª(f : { _1 : object, _2 : object })
                            ‚Üí Œª(x : cObject)
                            ‚Üí d.multiplicative.op { _1 = f._1 x, _2 = f._2 x }
                        }
                    }
                  ‚àß ./category sha256:20c87f9335c2da300dd29d45d7e78499a113481708800d86b12d1fb55ae58d9d
                    cObject
                    dObject
                    v
                    c
                    (base dObject d)
                : DuoidalCategory vObject object
