let cat =
      ./../../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let vObject = Type

let object = Type

in    { constraint =
            λ ( t
              : object
              )
          → ./../../Const/Type sha256:d0d255964e7701c8f9aa67f01b9f97dac9fbbda16e9c326faa48cddc1cf63740
            object
            object
            { _1 = {}, _2 = t }
      , arrow =
          λ(a : { _1 : object, _2 : object }) → a._1 → a._2
      , additive =
          { identity =
              <>
          , op =
                λ(a : { _1 : object, _2 : object })
              → < Left : a._1 | Right : a._2 >
          }
      , multiplicative =
          { identity =
              {}
          , op =
              λ(a : { _1 : Type, _2 : Type }) → { _1 : a._1, _2 : a._2 }
          }
      }
    : ./../Rig/Kind sha256:477d8185fbbe496496f87216c1204a2367ff703d5ca3b0c7495f17c43ac4dec6
      cat
      vObject
      object
