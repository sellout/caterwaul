{- Every group in a cartesian category is a Hopf monoid in a unique way. -}
let kCat =
      ./../../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let CartesianCategory =
      ./Type sha256:948128341a54715ede1d95ea6152b05c9098236abdd81b6d06426bc19b2da196

let Group =
      ./../../Group/Type sha256:1c7379742fbce696180cd8e2660a489b7b7d8cbfe81406733459e37ffa961214

let extractMonoid =
      ./../../Group/extractMonoid sha256:87ba7a505f82db6ae28745477cfd9bf713a4a645757e1b20cfc1ac63449841b8

let HopfMonoid =
      ./../../Monoid/Hopf/Type sha256:35e69ce13d838929d5e17043835097485b97e9717553dafdb22494c21a1e00dd

let MonoidalCategory =
      ./../Monoidal/Kind sha256:8e77a076f4c2f6e1d0ad07cfec37dfd04782e1a0a7e98a72a305233f69c494ca
      kCat

let vObject = Type

in    λ ( object
        : Kind
        )
    → λ(v : MonoidalCategory Type vObject)
    → λ(cat : MonoidalCategory vObject object)
    → λ(m : object)
    → λ(cartesian : CartesianCategory object v cat m)
    → λ(group : Group object cat m)
    →     { antipode =
              group.inverse
          }
        ∧ ./impliedBimonoid sha256:5799c4ac337f64df5e331721f569e165c811b50c9cf72d9b402d7835e4a46b73
          object
          v
          cat
          m
          cartesian
          (extractMonoid object cat m group)
      : HopfMonoid object cat m
