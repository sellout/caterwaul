let kCat =
      ./../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let base =
      ./../Category/Monoidal/extractCategory sha256:be63455106b8fe90ee7366a02f05b29c1aa42e63243bb9994d55011052eab6ec
      kCat

let vObject = Type

let v =
      ./../Category/Monoidal/Cartesian/extractCategory sha256:fef093587bdc97a914e4e30469579c22f8fb63653ea5f511606e0e8109662a4b
      kCat
      Type
      vObject
      ./../Category/Set/monoidal/cartesian sha256:b6efbdc0effbca1bc7427c980f2579012808494a8195fdf9fb52aea37ae91116

let object = Type

let cat =
      ./../Category/Monoidal/Cartesian/extractMonoidal sha256:0fcc63fc837459ca2866d31c5b11400b56fcb8f7d1846b774e98b47995c1879a
      kCat
      vObject
      object
      ./../Category/Set/monoidal/cartesian sha256:b6efbdc0effbca1bc7427c980f2579012808494a8195fdf9fb52aea37ae91116

in    λ ( f
        : kCat.arrow object object
        )
    → λ ( functor
        : ./../Functor/Endo/Type sha256:158c6ae27571d27adefd3b94b6b9ce3ed48e1130d406ec72c62ccadcf931dcd0
          vObject
          object
          v
          (base vObject object cat)
          f
        )
    → λ ( monad
        : ./Type sha256:0324dd40fc192581e566136f5cde4424ed653ecf7311b967b7d291d05484b78e
          object
          (base vObject object cat)
          f
        )
    →   { map =
            functor.map
        , identity =
              λ(a : object)
            → λ(fn : cat.arrow { _1 = cat.identity, _2 = a })
            → monad.identity a (fn {=})
        , product =
              λ ( i
                : object
                )
            → λ ( day
                :   ∀ ( r
                      : Type
                      )
                  → ./../Day/convolution sha256:9c319003951ddc83300318bd31dee48bc16d2f48890593ed4363470ab6763426
                    object
                    cat
                    cat
                    f
                    f
                    i
                    r
                  → r
                )
            → day
              (f i)
              (   λ(b : { _1 : object, _2 : object })
                → λ(fn : cat.arrow { _1 = cat.product b, _2 = i })
                → λ(d : { _1 : f b._1, _2 : f b._2 })
                → monad.product
                  i
                  ( functor.map
                    (cat.arrow { _1 = b._2, _2 = i })
                    (f i)
                    (   λ(fn : cat.arrow { _1 = b._2, _2 = i })
                      → functor.map b._2 i fn d._2
                    )
                    ( functor.map
                      b._1
                      (cat.arrow { _1 = b._2, _2 = i })
                      (λ(x : b._1) → λ(y : b._2) → fn { _1 = x, _2 = y })
                      d._1
                    )
                  )
              )
        }
      : ./../Functor/Monoidal/Type sha256:73d6a61a626107cf8fc9ee73e02b3116a2540bae6fa38881165eab9d8c0f8913
        object
        v
        cat
        cat
        f
