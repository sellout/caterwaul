{- This cheats a bit on the identity, since `dObject` is Type, we don‚Äôt need a
   functor **Set** ‚Üí ùíü.
-}
let kArrow =
      ./../../Function/Kind sha256:0b6372c593badac5fe880699fd1cf19dfba07c62fab935a8bad96915866f466e

let kProduct =
      ./../../Tuple/Kind sha256:03e1c52890f0cda1a2181cd3eb045d5344fc7c907fcbf836736c0e3222c5ffd8

let vObject = Type

let Category =
      ./../Kind sha256:41ea86fd34226d0dc3c87cc12f9ce042e3b54e7eb77b451cdbfb085ba3f66916
      kArrow
      kProduct

in    Œª ( cObject
        : Kind
        )
    ‚Üí Œª(dObject : Kind)
    ‚Üí Œª(v : Category Type vObject)
    ‚Üí Œª(c : Category vObject cObject)
    ‚Üí Œª(d : Category vObject dObject)
    ‚Üí   { constraint =
            ./../../Functor/Type sha256:9222d1a669a235e545d7d24bc2845509339fb9f17711afef958df74457784d4d
            vObject
            cObject
            dObject
            v
            c
            d
        , arrow =
            ./../../NaturalTransformation/Type sha256:1fb48a77c7998793c06084794271a92131143f42dc9f1a95cd8146b6aeda7d5e
            cObject
            dObject
            d
        }
      : Category vObject (kArrow cObject dObject)
