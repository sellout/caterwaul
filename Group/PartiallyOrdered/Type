{- This is the weakest form of order provided. There is no standalone preorder,
   partial order, or anything, because there are too many possible
   instances. For the general case, just define regular functions. A
   `Group/PartiallyOrdered` constrains the instances enough for a generic “less
   than” to be meaningful.
-}
let cat =
      ./../../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let vObject = Type

let Set =
      ./../../Category/Monoidal/Cartesian/extractMonoidal sha256:25afdf2818357f9c4b9dac6652b82e730472c389a634f8417a6014d39c7cddc0
      cat
      Type
      vObject
      ./../../Category/Set/monoidal/cartesian sha256:48e8bea552638624a62335eab92acd1e0a04c28e8a0d8fe1c8974565065a9576

in    λ ( m
        : Type
        )
    →   { partialLE :
            m → m → Optional Bool
        }
      ⩓ ./../../Eq/Type sha256:16ec0250d1cd6f2d48bb5fe37d46d1db9ef640657c7b247b8d5be1aca30259b1
        m
      ⩓ ./../Type sha256:fc01995b27c56e372c0cac6a842f3f7e80095057868f72104d58140e3b5bf908
        Type
        Set
        m
