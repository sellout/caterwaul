let kArrow = ./../Function/Kind

let kProduct = ./../Tuple/Kind

let vObject = Type

let object = Type

in    λ(v : ./../Category/Monoidal/Kind kArrow kProduct Type vObject)
    → λ(cat : ./../Category/Kind kArrow kProduct vObject object)
    → λ(category : ./../Category/Type object v cat)
    → ./../Lan/lift
      v
      cat
      (./../Category/extractSemigroupoid object v cat category)
      (./../Identity/Type object)
      (./../Identity/comonad object v cat category)
