{- NB: This is defined in terms of the monoidal categories instead of the other
       way around because this is more restrictive than either monoidal
       category.
     • Applicative requires that the target category is **Set** and
     • monadic requires an endofunctor`object`.
       When you combine these two restrictions, you end up only being able to
       support endofunctors in **Set**.
-}
let kCat =
      ./../Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let vObject = Type

let object = Type

in    λ ( v
        : ./../../Category/Kind sha256:c73426d12cddcdfc44b6e687fc897f7ef91fcda0c4da116a91acdca4d15c68a2
          kCat
          Type
          vObject
        )
    → λ ( cat
        : ./../../Category/Monoidal/Kind sha256:96b5eca83adb85b7bc744975b530210da2aec17c9c70b45d3b241ccfdb47e772
          kCat
          vObject
          object
        )
    → let applicative =
            ./../Functor/monoidal sha256:c875c228da7431ca2e307e3889d06f7b6b85e11022c22b649d3d80cdc860e991
            object
            v
            cat
            cat
      
      let monadic =
            ./monoidal/monadic sha256:bc90904e831033ee75dfbaca1c8bbf79c20633bae1c27ab297460fb43bddbaaa
            object
            v
            ( ./../../Category/Monoidal/extractCategory sha256:be63455106b8fe90ee7366a02f05b29c1aa42e63243bb9994d55011052eab6ec
              kCat
              vObject
              object
              cat
            )
      
      in    { constraint =
                monadic.constraint
            , arrow =
                applicative.arrow
            , additive =
                { identity =
                    applicative.identity
                , product =
                    applicative.product
                }
            , multiplicative =
                { identity = monadic.identity, product = monadic.product }
            }
          : ./../Duoidal/Kind sha256:9093c6472bbfa0939a07b1d0896b7856410c84b4e55175dce8978baf8ff28b07
            kCat
            vObject
            (kCat.arrow object object)
