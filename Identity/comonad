let kArrow = ./../Function/Kind

let kProduct = ./../Tuple/Kind

let vObject = Type

in    λ(object : Kind)
    → λ(v : ./../Category/Monoidal/Kind kArrow kProduct Type vObject)
    → λ(cat : ./../Category/Kind kArrow kProduct vObject object)
    → λ(category : ./../Category/Type object v cat)
    → ./monad
      object
      (./../Category/Op/Kind vObject object cat)
      (./../Category/Op/category object v cat category)
