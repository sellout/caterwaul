let kArrow =
      ./../../../Function/Kind sha256:0b6372c593badac5fe880699fd1cf19dfba07c62fab935a8bad96915866f466e

let kProduct =
      ./../../../Tuple/Kind sha256:03e1c52890f0cda1a2181cd3eb045d5344fc7c907fcbf836736c0e3222c5ffd8

let base =
      ./../../../Category/Monoidal/extractCategory sha256:f8fd8dd2ec93dac14e091587db11696f084c1d8eb9de88b71b625151904db9ff
      kArrow
      kProduct

let vObject = Type

let v =
      base
      Type
      vObject
      ./../../../Category/Set/monoidal/cartesian sha256:b017581ee66eec1995d52c80d527598dd5614254bf7217768c035c3a5e2103bd

let object = Type

let cat =
      ./../../../Category/Set/monoidal/cartesian sha256:b017581ee66eec1995d52c80d527598dd5614254bf7217768c035c3a5e2103bd

in    λ ( m
        : kArrow object object
        )
    → λ ( monoidal
        : ./../../../Functor/Monoidal/Type sha256:3fd0a2398dd1d3c0cb029ce034f09d4c1b6f51e622139f06ad1086ceea926567
          object
          v
          cat
          cat
          m
        )
    →   { map =
              λ ( a
                : object
                )
            → λ(b : object)
            → λ(f : cat.arrow { _1 = a, _2 = m b })
            → λ(fa : Optional a)
            → Optional/fold
              a
              fa
              (m (Optional b))
              (   λ ( x
                    : a
                    )
                → ( ./../../../Functor/Monoidal/extractFunctor sha256:ab854ff369847bf771da4e6698655de2db2af49d4c164191f290c892f181a702
                    Type
                    v
                    cat
                    cat
                    m
                    monoidal
                  ).map
                  b
                  (Optional b)
                  (λ(y : b) → Some y)
                  (f x)
              )
              (monoidal.identity (Optional b) (λ(_ : cat.identity) → None b))
        }
      : ./../../../Functor/Endo/Star/Type sha256:2362c697b588d4e2206bc6003d63b13abc31f8ecc25f6ccb72950d3611b6cb7f
        vObject
        object
        v
        (base vObject object cat)
        m
        Optional
