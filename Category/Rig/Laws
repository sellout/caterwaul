let kArrow =
      ./../../Function/Kind sha256:0b6372c593badac5fe880699fd1cf19dfba07c62fab935a8bad96915866f466e

let kProduct =
      ./../../Tuple/Kind sha256:03e1c52890f0cda1a2181cd3eb045d5344fc7c907fcbf836736c0e3222c5ffd8

let vObject = Type

in    λ ( object
        : Kind
        )
    → λ ( cat
        : ./Kind sha256:305fbe8b5acbd3df07c4ea2a4f29c3765d5a4ddf8a640cc121f0ce303b311e85
          kArrow
          kProduct
          vObject
          object
        )
    → let Isomorphism =
            ./../../Isomorphism/Type sha256:5c54e6cfc68d8e5948c355658f18db9b3bcf21a6fdf436ac2ef80ee5eed192b7
            object
            cat.arrow
      
      let additive =
            ./extractAdditive sha256:1074fe06c55fe9e0243e164b39ae06c8e791cdfeae09351b907c13dbda400266
            kArrow
            kProduct
            vObject
            object
            cat
      
      let multiplicative =
            ./extractMultiplicative sha256:745f93c40ce5eaa7eae89720816454e14832c9b87596c0f50c505af722ad8596
            kArrow
            kProduct
            vObject
            object
            cat
      
      in  { distributivity :
                ∀(a : object)
              → ∀(b : object)
              → ∀(c : object)
              → Isomorphism
                { _1 =
                    multiplicative.op
                    { _1 = a, _2 = additive.op { _1 = b, _2 = c } }
                , _2 =
                    additive.op
                    { _1 =
                        multiplicative.op { _1 = a, _2 = b }
                    , _2 =
                        multiplicative.op { _1 = a, _2 = c }
                    }
                }
          , leftAnnihilation :
                ∀(a : object)
              → Isomorphism
                { _1 =
                    multiplicative.op { _1 = additive.identity, _2 = a }
                , _2 =
                    additive.identity
                }
          , rightAnnihilation :
                ∀(a : object)
              → Isomorphism
                { _1 =
                    multiplicative.op { _1 = a, _2 = additive.identity }
                , _2 =
                    additive.identity
                }
          , additive :
              ./../Monoidal/Laws sha256:9ee9cdda6ce8f8c6532775def31b4c2a9ca614586fca86e7eef6894c691873bc
              object
              additive
          , multiplicative :
              ./../Monoidal/Laws sha256:9ee9cdda6ce8f8c6532775def31b4c2a9ca614586fca86e7eef6894c691873bc
              object
              multiplicative
          }
