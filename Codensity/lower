let kArrow = ./../Function/Kind

let kProduct = ./../Tuple/Kind

let vObject = Type

let v =
      ./../Category/Monoidal/extractCategory
      kArrow
      kProduct
      Type
      vObject
      ./../Category/Set/monoidal/cartesian

let object = Type

let cat = ./../Category/Set/monoidal/cartesian

in    λ(m : kArrow object object)
    → λ(monoidal : ./../Functor/Monoidal/Type object v cat cat m)
    → ./../Ran/lower m monoidal m
