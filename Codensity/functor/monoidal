let kArrow = ./../../Function/Kind

let object = Type

let arrow = ./../../Function/Type

let category = ./../../Function/category

let semigroupoid = ./../../Function/semigroupoid

in    λ(m : kArrow object object)
    → ./../../Monad/impliedMonoidalFunctor
      (./../Type object arrow m)
      (./../../Ran/functor object object arrow semigroupoid m m)
      (./../monad category m)
