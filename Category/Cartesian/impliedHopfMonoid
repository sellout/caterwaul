{- Every group in a cartesian category is a Hopf monoid in a unique way. -}
let kCat =
      ./../../Category/Cat/semigroupal sha256:de5b05c9640ea3ca0ee586c7102a982db79d3c0f0c92230cb2df19c7b986b513

let CartesianCategory =
      ./Type sha256:f5c21da484fffdaa1b6e8847b80d5825d716578a81cd8694177aa84279439094

let Group =
      ./../../Group/Type sha256:fc01995b27c56e372c0cac6a842f3f7e80095057868f72104d58140e3b5bf908

let extractMonoid =
      ./../../Group/extractMonoid sha256:49c1580d0e7d8b8f154acb786f7f3011f135300908fbc942137a095e1f66eedf

let HopfMonoid =
      ./../../Monoid/Hopf/Type sha256:33d1f3be0a2a55f79742531bc45661be08d69f845da85c6bc095991f5cfedad1

let MonoidalCategory =
      ./../Monoidal/Kind sha256:6eb37e632903173c5ec1600564aa614697c4b58719773c4e4c66a76f095d1636
      kCat

let vObject = Type

in    λ ( object
        : Kind
        )
    → λ(v : MonoidalCategory Type vObject)
    → λ(cat : MonoidalCategory vObject object)
    → λ(m : object)
    → λ(cartesian : CartesianCategory object v cat m)
    → λ(group : Group object cat m)
    →     { antipode =
              group.inverse
          }
        ∧ ./impliedBimonoid sha256:21955be9d47321ac905985581ee412fe50d7dbc084d53791a47b8350eaaa2da3
          object
          v
          cat
          m
          cartesian
          (extractMonoid object cat m group)
      : HopfMonoid object cat m
