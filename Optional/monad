let cat = ./../Category/Cat/semigroupal

let vObject = Type

let Set =
      ./../Category/Monoidal/Cartesian/extractCategory
      cat
      vObject
      Type
      ./../Category/Set/monoidal/cartesian

let category = ./../Category/Set/category

in    { unit =
          λ(a : Type) → λ(x : a) → Some x
      , product =
            λ(a : Type)
          → λ(mma : Optional (Optional a))
          → Optional/fold
            (Optional a)
            mma
            (Optional a)
            (category.unit (Optional a))
            (None a)
      }
    : ./../Monad/Type Type Set Optional
